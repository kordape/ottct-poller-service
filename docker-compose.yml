version: '3.9'
networks:
  ottct-poller-network:
    driver: bridge
services:

  localstack:
    image: localstack/localstack
    container_name: localstack
    healthcheck:
      test:
        - CMD
        - bash
        - -c
        - awslocal sqs list-queues
      interval: 5s
      timeout: 10s
      start_period: 10s
    ports:
      - 4566:4566
    environment:
      - SERVICES=sqs
    volumes:
      - ./init-scripts:/docker-entrypoint-initaws.d
    networks:
      - ottct-poller-network
  app:
    build: .
    container_name: app
    image: ottct-poller-service:latest
    environment:
      TWITTER_BEARER_TOKEN: 'AAAAAAAAAAAAAAAAAAAAACXAcgEAAAAAMFkd4RQMKRSjvXUQGIrdZAHNJjg%3DLYqfisQPqvbuXeo0FjwYhrGqJ0eU6MVdHsLIqdvJ368MfZAq9o'
      PREDICTOR_BASE_URL: 'http://ml:8080/predict'
    networks:
      - ottct-poller-network
    links:
      - "ml:ml"
    depends_on:
      db:
        condition: service_healthy
  ml:
    container_name: ml
    image: ml
    ports:
      - 8081:8080
    networks:
      - ottct-poller-network
  db:
    image: postgres:13.3-alpine
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: tests
    restart: on-failure
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    command:
      - /bin/sh
      - -c
      - |
        echo 'psql -v ON_ERROR_STOP=1 --username "$$POSTGRES_USER" -c "CREATE DATABASE ottct_main_service";' >> /docker-entrypoint-initdb.d/init.sh;
        docker-entrypoint.sh postgres
    networks:
      - ottct-poller-network
