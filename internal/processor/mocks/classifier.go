// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	context "context"

	processor "github.com/kordape/ottct-poller-service/internal/processor"
	mock "github.com/stretchr/testify/mock"
)

// FakeNewsClassifier is an autogenerated mock type for the FakeNewsClassifier type
type FakeNewsClassifier struct {
	mock.Mock
}

// Classify provides a mock function with given fields: ctx, request
func (_m *FakeNewsClassifier) Classify(ctx context.Context, request processor.ClassifyRequest) (processor.ClassifyResponse, error) {
	ret := _m.Called(ctx, request)

	var r0 processor.ClassifyResponse
	if rf, ok := ret.Get(0).(func(context.Context, processor.ClassifyRequest) processor.ClassifyResponse); ok {
		r0 = rf(ctx, request)
	} else {
		r0 = ret.Get(0).(processor.ClassifyResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, processor.ClassifyRequest) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type NewFakeNewsClassifierT interface {
	mock.TestingT
	Cleanup(func())
}

// NewFakeNewsClassifier creates a new instance of FakeNewsClassifier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFakeNewsClassifier(t NewFakeNewsClassifierT) *FakeNewsClassifier {
	mock := &FakeNewsClassifier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
