// Code generated by mockery. DO NOT EDIT.

package predictor

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockFakeNewsClassifier is an autogenerated mock type for the FakeNewsClassifier type
type MockFakeNewsClassifier struct {
	mock.Mock
}

// Classify provides a mock function with given fields: ctx, request
func (_m *MockFakeNewsClassifier) Classify(ctx context.Context, request ClassifyRequest) (ClassifyResponse, error) {
	ret := _m.Called(ctx, request)

	var r0 ClassifyResponse
	if rf, ok := ret.Get(0).(func(context.Context, ClassifyRequest) ClassifyResponse); ok {
		r0 = rf(ctx, request)
	} else {
		r0 = ret.Get(0).(ClassifyResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, ClassifyRequest) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type NewMockFakeNewsClassifierT interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockFakeNewsClassifier creates a new instance of MockFakeNewsClassifier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockFakeNewsClassifier(t NewMockFakeNewsClassifierT) *MockFakeNewsClassifier {
	mock := &MockFakeNewsClassifier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
